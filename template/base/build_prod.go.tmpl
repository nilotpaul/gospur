{{- if .Web.IsEcho -}}
//go:build !dev
// +build !dev

package main

import (
	"embed"
	"html/template"
	"io/fs"
	"path/filepath"

	"github.com/labstack/echo/v4"
)

//go:embed public/*
var publicFS embed.FS

//go:embed web/*
var templateFS embed.FS

func ServeStatic(e *echo.Echo) *echo.Route {
	root := "public"
	return e.StaticFS("/public", echo.MustSubFS(publicFS, root))
}

// parseTemplates takes a embed.FS where html files will reside.
// It'll check nested dirs and load all files with .html ext.
func parseTemplates() (*template.Template, error) {
	var (
		tmpl = template.New("")
		root = "."
	)

	err := fs.WalkDir(templateFS, root, func(path string, d fs.DirEntry, err error) error {
		if err == nil {
			if !d.IsDir() && filepath.Ext(path) == ".html" {
				_, err := tmpl.ParseFS(templateFS, path)
				if err != nil {
					return err
				}
			}
		}

		return err
	})

	return tmpl, err
}

func LoadTemplates(*echo.Echo) *template.Template {
	return template.Must(parseTemplates())
}
{{- else if .Web.IsFiber -}}
//go:build !dev
// +build !dev

package main

import (
	"embed"
	"io/fs"
	"net/http"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/fiber/v2/middleware/filesystem"
	"github.com/gofiber/template/html/v2"
)

//go:embed public/*
var publicFS embed.FS

//go:embed web/*
var templateFS embed.FS

func ServeStatic(app *fiber.App) fiber.Router {
	root := "public"
	return app.Use("/public", filesystem.New(filesystem.Config{
		PathPrefix: root,
		Root:       http.FS(publicFS),
	}))
}

func LoadTemplates() *html.Engine {
	subFS, err := fs.Sub(templateFS, "web")
	if err != nil {
		panic(err)
	}

	return html.NewFileSystem(http.FS(subFS), ".html")
}
{{- end -}}